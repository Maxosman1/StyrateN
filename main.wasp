app Styrate {
  wasp: {
    version: "^0.11.1"
  },
  title: "Styrate",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id        Int        @id @default(autoincrement())
    username  String     @unique
    password  String
    videos    Video[]
    comments  Comment[]
    reactions Reaction[]
psl=}

entity Video {=psl
    id        Int        @id @default(autoincrement())
    url       String
    user      User       @relation(fields: [userId], references: [id])
    userId    Int
    comments  Comment[]
    reactions Reaction[]
psl=}

entity Comment {=psl
    id      Int    @id @default(autoincrement())
    text    String
    user    User   @relation(fields: [userId], references: [id])
    userId  Int
    video   Video  @relation(fields: [videoId], references: [id])
    videoId Int
psl=}

entity Reaction {=psl
    id      Int    @id @default(autoincrement())
    type    String
    user    User   @relation(fields: [userId], references: [id])
    userId  Int
    video   Video  @relation(fields: [videoId], references: [id])
    videoId Int
psl=}

action createVideo {
  fn: import { createVideo } from "@server/actions.js",
  entities: [Video]
}

action createComment {
  fn: import { createComment } from "@server/actions.js",
  entities: [Comment]
}

action createReaction {
  fn: import { createReaction } from "@server/actions.js",
  entities: [Reaction]
}

query getVideos {
  fn: import { getVideos } from "@server/queries.js",
  entities: [Video]
}

query getVideo {
  fn: import { getVideo } from "@server/queries.js",
  entities: [Video, Comment, Reaction]
}

query getUser {
  fn: import { getUser } from "@server/queries.js",
  entities: [User, Video, Comment, Reaction]
}

route HomePageRoute { path: "/", to: HomePage }
page HomePage {
  component: import { HomePage } from "@client/pages/Home.jsx",
  authRequired: false
}

route VideoRoute { path: "/video/:videoId", to: VideoPage }
page VideoPage {
  component: import { Video } from "@client/pages/Video.jsx",
  authRequired: true
}

route UserProfileRoute { path: "/user/:userId", to: UserProfilePage }
page UserProfilePage {
  component: import { UserProfile } from "@client/pages/UserProfile.jsx",
  authRequired: true
}